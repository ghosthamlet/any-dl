################################
#### BELOW IS TESTING-STUFF ####
################################
parsername "try_tagselect": ( )
start
  print("try tagselect syntax");

  print("****************************************");

  print("===== data ==========================");
  recall("BASEDOC");
  tagselect("h1"| data );
  #tagselect("ul","li","a"|data);
  print;
  show_type;
  show_match;

  print("===== dataslurp =====================");
  recall("BASEDOC");
  tagselect("h1"| data );
  #tagselect("table","tr","td"|dataslurp);
  print;
  show_type;
  show_match;


  print("===== tag ===========================");
  recall("BASEDOC");
  tagselect(."align"|tag);
  print;
  show_type;
  show_match;


  print("===== argpairs =======================");
  recall("BASEDOC");
  tagselect("img"."src"|argpairs);
  print;
  show_type;
  show_match;


  print("===== argkeys =======================");
  recall("BASEDOC");
  tagselect("img"."src"|argkeys);
  print;
  show_type;
  show_match;

  print("===== argvals =======================");

  recall("BASEDOC");
  tagselect("img"."src"|argvals);
  print;
  show_type;
  show_match;


  print("===== arg(\"src\") ======================");
  recall("BASEDOC");
  tagselect("img"."src"| arg("src") );
  print;
  show_type;
  show_match;


  print("===== arg(\"alt\") ======================");
  recall("BASEDOC");
  tagselect("img"."src"| arg("alt") );
  print;
  show_type;
  show_match;


  # --------- SELECTION LIST ---------------------------------------------
  print("===== arg(\"src\"), arg(\"alt\") ======================");
  recall("BASEDOC");
  tagselect("img"."src" | arg("src"), arg("alt") );
  print;
  show_type;
  show_match;

  # --------- transposing ---------
  print(" *************** TRANSPOSE DATA ***************\n" );
  transpose;
  print;
  show_type;
  show_match;
  print(" *************** -------------- ***************\n" );
  # --------- -------------- ---------------------------------------------


  print("===== dump =====================");
  recall("BASEDOC");
  tagselect("table","tr","td"|dump);
  print;
  show_type;
  #show_match;


  print("===== htmlstring ======================");
  recall("BASEDOC");
  tagselect("img"."src"| htmlstring );
  print;
  show_type;
  #show_match;


#  print("===== doclist ======================");
#  recall("BASEDOC");
#  tagselect("img"."src"| doclist );
#  print;
#  show_type;
#  #show_match;




exitparse;
  print("****************************************");
  tagselect("table","a","img"."align"="top"|dump);
  print("****************************************");
  tagselect(.="top"|dump);
  tagselect("meta"."property"|dump);
  print("****************************************");
  print("Now with \"data\" and \"print()\"");
  tagselect("title"|dataslurp);
  print;
  recall("BASEDOC");
  print("****************************************");
  tagselect("script"|dump);
  print("****************************************");
end


parsername "tbl2csv": ( )
start
  tagselect("table"|dump);
  show_match;
  print;
end


parsername "uniq-test": ( )
start
  match("<H1>");
  show_match;
  print;

  print("============ UNIQ: ============");

  uniq;
  show_match;
  print;


end


# some stuff to experiment with
# -----------------------------
parsername "anytag_tags": ( )
start
  tagselect( anytag | tag );

  show_match;
end


# some stuff to experiment with
# -----------------------------
parsername "anytag_tags_uniq": ( )
start
  tagselect( anytag | tag );

  transpose;
  uniq; # removes multiple rows (e.g. many empty rows)
  transpose;

  show_match;
end

# some stuff to experiment with
# -----------------------------
parsername "anytag_argpairs": ( )
start
  tagselect( anytag | argpairs );

  show_match;
end


parsername "teststorerecall": ( )
start
  store("doc");
  linkextract;
  store("links");

  recall("doc");
  print;

  recall("links");
  print;
end

parsername "testassign": ( )
start
  linkextract;
  print;
  print("--------");
  store("links");

  # Mit Assignments
  print("Jetzt mit Assigments");
  recall("BASEDOC");
  linksa = linkextract;
print_string("DIREKT:");
print;
  #show_match;
  #show_type;
  #show_variables;
#print;
  print("PRINT_linksa als $linksa");
  print($linksa);
  #print($linksa);

  print("linksa - RECALLED");
  recall("linksa");
  show_type;
  print;
end


parsername "testdummy": ( )
start
  dummy;
end

parsername "testemptydummy": ( )
start
  emptydummy;
end

parsername "testifthenelse": ( )
start
  linkextract;
  store("links");


  ifnotempty( emptydummy; )
  then
      print("Not empty");
  else
      print("Empty");
  fi

end

